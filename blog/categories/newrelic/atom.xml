<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: newrelic | Anton Katunin]]></title>
  <link href="http://antulik.com/blog/categories/newrelic/atom.xml" rel="self"/>
  <link href="http://antulik.com/"/>
  <updated>2014-09-20T15:24:06+04:00</updated>
  <id>http://antulik.com/</id>
  <author>
    <name><![CDATA[Anton Katunin]]></name>
    <email><![CDATA[antulik@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Report rake (>=0.9) exceptions to NewRelic]]></title>
    <link href="http://antulik.com/blog/2013/08/08/rake-newrelic/"/>
    <updated>2013-08-08T00:00:00+04:00</updated>
    <id>http://antulik.com/blog/2013/08/08/rake-newrelic</id>
    <content type="html"><![CDATA[<p>NewRelic service is great for application monitoring and errors tracking. However it doesn&rsquo;t track rake exceptions by default. You can use <a href="https://airbrake.io">AirBrake</a> gem and service, but sometimes it&rsquo;s too much for you. Fortunately with a bit of ruby it&rsquo;s easy to do it yourself.</p>

<!--more-->


<p>Create a small module to hook into rake library at <code>lib/rake_notifier.rb</code></p>

<pre><code>module RakeNotifier
  def self.included(klass)
    klass.class_eval do
      alias_method :display_error_message_without_log, :display_error_message
      alias_method :display_error_message, :display_error_message_with_log
    end
  end

  def display_error_message_with_log(ex)
    ::NewRelic::Agent.notice_error(ex)
    display_error_message_without_log(ex)
  end
end
</code></pre>

<p>And then hook it up in the rails initialiser <code>config/initializers/rake_notifier_hook.rb</code></p>

<pre><code>if defined?(::Rake)
  Rake.application.instance_eval do
    class &lt;&lt; self
      include RakeNotifier
    end
  end
end
</code></pre>

<p>That&rsquo;s it, now you will see rake exceptions at your NewRelic Errors view.</p>
]]></content>
  </entry>
  
</feed>
