<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | Anton Katunin]]></title>
  <link href="http://antulik.com/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://antulik.com/"/>
  <updated>2014-09-20T15:23:42+04:00</updated>
  <id>http://antulik.com/</id>
  <author>
    <name><![CDATA[Anton Katunin]]></name>
    <email><![CDATA[antulik@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Multiple logins at once with Browser Profiles]]></title>
    <link href="http://antulik.com/blog/2014/09/21/testing-with-multiple-users/"/>
    <updated>2014-09-21T00:00:00+04:00</updated>
    <id>http://antulik.com/blog/2014/09/21/testing-with-multiple-users</id>
    <content type="html"><![CDATA[<p>Do you:</p>

<ul>
<li>share same computer and login with other family members</li>
<li>or you are testing website with login</li>
</ul>


<p>Then you should know what <em>browser profiles</em> are.</p>

<p><strong>Browser profiles</strong> is a way to separate usage of the web browser per user. Just like any login system but without password. That means history, cache, cookies and as a result logins will be scope to a single user.</p>

<p>This is ideal when you are testing website for different logins at the same time or just want to separate work and personal browsing history.</p>

<p>Separation of browsing history might get more important with time as it&rsquo;s emerging trend for search enginge to personalise search results.</p>

<p>Most popular browsers have browser profiles built in already:</p>

<ol>
<li><a href="https://support.google.com/chrome/answer/2364824?hl=en">Chrome</a> (Manage multiple users on Chrome)</li>
<li><a href="https://support.mozilla.org/en-US/kb/profile-manager-create-and-remove-firefox-profiles">Firefox</a> (Multi profile access)</li>
<li><a href="http://blogs.msdn.com/b/ie/archive/2009/05/06/session-cookies-sessionstorage-and-ie8.aspx">Internet Explorer</a> (Session Cookies, sessionStorage, and IE8 or “How can I log into two webmail accounts at the same time?”)</li>
</ol>


<p>Other references:</p>

<ul>
<li><a href="http://www.howtogeek.com/139705/how-to-use-multiple-browser-profiles-in-any-browser/">How to Use Multiple Browser Profiles in Any Browser</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Differentiate your gem]]></title>
    <link href="http://antulik.com/blog/2014/09/14/differentiate-your-gem/"/>
    <updated>2014-09-14T00:00:00+04:00</updated>
    <id>http://antulik.com/blog/2014/09/14/differentiate-your-gem</id>
    <content type="html"><![CDATA[<p>Are you tired of seeing <em>yet another project</em> on github while there are ten others which do exactly the same thing? In this post I suggest we start to diffirentiate our projects.</p>

<p>Projects like <a href="ruby-toolbox.com">Ruby Toolbox</a> make developers life much easiers by categorising gems and what&rsquo;s more important providing popularity information. It is important because developer can make make his own decision why one gem is better than other one.</p>

<p>The first question I&rsquo;m looking answer for in such situation is <strong>how this gem or project on github is different from another one</strong>, almost identical as it seems at first.</p>

<p>I believe every single library should have the first two sections in its readme file:</p>

<ul>
<li>What is it? And how can it make my life better?</li>
<li>How is it different from competitor projects?</li>
</ul>


<p>So when you think your new project is going to change the world and there are none like it in existance. You can save yourself some time and delete it after <em>initial  commit</em>.</p>

<p>Save time for your fellow developers, be honest and tell why we should and shouldn&rsquo;t use your library.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Speed up POW DNS Lookup]]></title>
    <link href="http://antulik.com/blog/2013/09/01/pow/"/>
    <updated>2013-09-01T00:00:00+04:00</updated>
    <id>http://antulik.com/blog/2013/09/01/pow</id>
    <content type="html"><![CDATA[<p>I&rsquo;m using <a href="http://pow.cx/">POW</a> as a proxy to my local dev server in development. That gives me nice local *.dev domain names. However I&rsquo;ve noticed that it takes 10 seconds to load a singe page in Chrome. Of course, I thought, It does like 80 requests as each asset is served as a separate file in development. But after investigating it a bit more DNS lookup for each request was 3 seconds and for some reasons it was like that for every single http request.</p>

<!--more-->


<p>After looking around turns out that the issue DNS resolver checks my main DNS server first if it knows anything about *.dev domains, if not then it checks the next dns server and so on. Which results in 3 seconds delay.</p>

<p>Solution.
First thing. I had &lsquo;default&rsquo; rule in pow to proxy port 3000 if now specific domains was matched. So I&rsquo;ve added app specific domain I was using for the development -> storyline which gave me storyline.dev</p>

<p>Second. I&rsquo;ve installed <a href="https://github.com/Rodreegez/powder">powder</a></p>

<pre><code>gem install powder
</code></pre>

<p>and used host command to write my domains into the /etc/hosts file</p>

<pre><code>powder host
</code></pre>

<p>after that DNS lookup decreased from 3s to 1ms. Pretty good time saver.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Report rake (>=0.9) exceptions to NewRelic]]></title>
    <link href="http://antulik.com/blog/2013/08/08/rake-newrelic/"/>
    <updated>2013-08-08T00:00:00+04:00</updated>
    <id>http://antulik.com/blog/2013/08/08/rake-newrelic</id>
    <content type="html"><![CDATA[<p>NewRelic service is great for application monitoring and errors tracking. However it doesn&rsquo;t track rake exceptions by default. You can use <a href="https://airbrake.io">AirBrake</a> gem and service, but sometimes it&rsquo;s too much for you. Fortunately with a bit of ruby it&rsquo;s easy to do it yourself.</p>

<!--more-->


<p>Create a small module to hook into rake library at <code>lib/rake_notifier.rb</code></p>

<pre><code>module RakeNotifier
  def self.included(klass)
    klass.class_eval do
      alias_method :display_error_message_without_log, :display_error_message
      alias_method :display_error_message, :display_error_message_with_log
    end
  end

  def display_error_message_with_log(ex)
    ::NewRelic::Agent.notice_error(ex)
    display_error_message_without_log(ex)
  end
end
</code></pre>

<p>And then hook it up in the rails initialiser <code>config/initializers/rake_notifier_hook.rb</code></p>

<pre><code>if defined?(::Rake)
  Rake.application.instance_eval do
    class &lt;&lt; self
      include RakeNotifier
    end
  end
end
</code></pre>

<p>That&rsquo;s it, now you will see rake exceptions at your NewRelic Errors view.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Zeus with RubyMine 6.0 Momiji]]></title>
    <link href="http://antulik.com/blog/2013/08/05/zeus-with-ruby-mine/"/>
    <updated>2013-08-05T00:00:00+04:00</updated>
    <id>http://antulik.com/blog/2013/08/05/zeus-with-ruby-mine</id>
    <content type="html"><![CDATA[<p>The first version of RubyMine with Zeus support was released last week. This is a small tip how to get it working.</p>

<!--more-->


<p>First make sure you are running at least <code>0.13.4.pre2</code> version of zeus. In your Gemfile:</p>

<pre><code>gem 'zeus', '0.13.4.pre2'
</code></pre>

<p>and run</p>

<pre><code>bundle install
</code></pre>

<p>Then go to <code>Run -&gt; Edit Configurations</code> menu. Select defaults for <code>RSpec</code> and <code>Test::Unit/Shoulda/Minitest</code> and tick <code>Use Zeus Server</code></p>

<p><img src="http://markdown-blog.s3.amazonaws.com/2013-08/Screen_Shot_2013-08-05_at_4.27.36_PM.png" alt="Picture" /></p>

<p>Now you can start Zeus server. Select <code>Tools -&gt; Run Zeus Server ...</code></p>

<p>That&rsquo;s it. Now you can run any test and it will use Zeus server. Happy lightning tests!</p>

<p>Note: if you rerun recent test, it might still use old configuration. To fix that, go to <code>Run -&gt; Edit Configurations...</code> and remove all existing test configs under <code>RSpec</code> and <code>Test::Unit/Shoulda/Minitest</code> dropdowns.</p>
]]></content>
  </entry>
  
</feed>
